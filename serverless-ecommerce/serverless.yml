service: ecommerce-serverless

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  environment:
    USERS_TABLE: ${self:service}-users-${opt:stage, 'dev'}
    PRODUCTS_TABLE: ${self:service}-products-${opt:stage, 'dev'}
    ORDERS_TABLE: ${self:service}-orders-${opt:stage, 'dev'}
    JWT_SECRET: ${ssm:/ecommerce/jwt-secret}
    STRIPE_SECRET_KEY: ${ssm:/ecommerce/stripe-key}
  
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:*
            - sqs:*
            - sns:*
            - events:*
          Resource: "*"

functions:
  # Auth
  login:
    handler: functions/auth/login.handler
    events:
      - http:
          path: /auth/login
          method: post
          cors: true
  
  # Products
  getProducts:
    handler: functions/products/getProducts.handler
    events:
      - http:
          path: /products
          method: get
          cors: true
  
  # Orders
  createOrder:
    handler: functions/orders/createOrder.handler
    events:
      - http:
          path: /orders
          method: post
          cors: true
          authorizer:
            name: authorizerFunc
            resultTtlInSeconds: 300
  
  # Payments (triggered by SQS)
  processPayment:
    handler: functions/payments/processPayment.handler
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - PaymentQueue
              - Arn

resources:
  Resources:
    # DynamoDB Tables
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.USERS_TABLE}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: email
            KeyType: HASH
    
    ProductsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.PRODUCTS_TABLE}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
    
    OrdersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.ORDERS_TABLE}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
    
    # SQS Queue
    PaymentQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:service}-payment-queue
        VisibilityTimeout: 300
